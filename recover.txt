commit eb38f044f37e3af6bc0aef374a8e9b7934713f89
Merge: 3e0dfe4 9285cfb
Author: Revan Arturito <revan.arturito@gmail.com>
Date:   Fri May 9 20:35:18 2025 +0700

    WIP on main: 3e0dfe4 Merge pull request #47 from alfathoshi/febry

diff --cc .metadata
index 6eb54a1,6eb54a1..1f19d86
--- a/.metadata
+++ b/.metadata
@@@ -4,7 -4,7 +4,7 @@@
  # This file should be version controlled and should not be manually edited.
  
  version:
--  revision: "761747bfc538b5af34aa0d3fac380f1bc331ec49"
++  revision: "c519ee916eaeb88923e67befb89c0f1dabfa83e6"
    channel: "stable"
  
  project_type: app
@@@ -13,26 -13,26 +13,26 @@@
  migration:
    platforms:
      - platform: root
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: android
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: ios
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: linux
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: macos
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: web
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
      - platform: windows
--      create_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
--      base_revision: 761747bfc538b5af34aa0d3fac380f1bc331ec49
++      create_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
++      base_revision: c519ee916eaeb88923e67befb89c0f1dabfa83e6
  
    # User provided section
  
diff --cc lib/app/data/Invoice.dart
index 4c75b3f,4c75b3f..bde1fa9
--- a/lib/app/data/Invoice.dart
+++ b/lib/app/data/Invoice.dart
@@@ -3,16 -3,16 +3,12 @@@ import 'package:temanbicara/app/data/Tr
  class InvoiceModel {
    final TransactionModel transaction;
    final String invoice;
--  final int appTax;
--  final int admTax;
    final String metodePembayaran;
    final int hargaTotal;
  
    InvoiceModel(
        {required this.transaction,
        required this.invoice,
--      required this.appTax,
--      required this.admTax,
        required this.metodePembayaran,
        required this.hargaTotal});
  }
diff --cc lib/app/data/Transaction.dart
index 5689f39,5689f39..d2ebb17
--- a/lib/app/data/Transaction.dart
+++ b/lib/app/data/Transaction.dart
@@@ -10,6 -10,6 +10,8 @@@ class TransactionModel 
    final String kadaluarsa;
    final int harga;
    final int selectedID;
++  final int appTax;
++  final int admTax;
  
    TransactionModel(
        {required this.namaPsikiater,
@@@ -21,6 -21,6 +23,8 @@@
        required this.jadwal,
        required this.waktu,
        this.kadaluarsa = "Timeless",
--      this.harga = 300000,
++      this.harga = 1000,
++      this.appTax = 1000,
++      this.admTax = 1000,
        required this.selectedID});
  }
diff --cc lib/app/modules/assesment_1/controllers/assesment_1_controller.dart
index 4450608,4450608..3abf11f
--- a/lib/app/modules/assesment_1/controllers/assesment_1_controller.dart
+++ b/lib/app/modules/assesment_1/controllers/assesment_1_controller.dart
@@@ -1,8 -1,8 +1,6 @@@
  import 'package:flutter/material.dart';
  import 'package:get/get.dart';
  import 'package:get_storage/get_storage.dart';
--import 'dart:convert';
--import 'package:http/http.dart' as http;
  import 'package:intl/intl.dart';
  import 'package:temanbicara/app/modules/edit_profile/controllers/datepicker_controller.dart';
  import 'package:temanbicara/app/routes/app_pages.dart';
diff --cc lib/app/modules/consult/controllers/consult_controller.dart
index a056f80,a056f80..45ea993
--- a/lib/app/modules/consult/controllers/consult_controller.dart
+++ b/lib/app/modules/consult/controllers/consult_controller.dart
@@@ -3,7 -3,7 +3,6 @@@ import 'package:get/get.dart'
  import 'package:get_storage/get_storage.dart';
  import 'package:http/http.dart' as http;
  import 'package:temanbicara/app/config/config.dart';
--import 'package:get_storage/get_storage.dart';
  
  class ConsultController extends GetxController {
    var schedules = {}.obs;
@@@ -12,7 -12,7 +11,6 @@@
  
    Future<void> fetchData() async {
      try {
--      // final userId = box.read('id');
        final token = box.read('token');
  
        isLoading.value = true;
diff --cc lib/app/modules/consult/views/consult_view.dart
index 36b3501,36b3501..131dcb1
--- a/lib/app/modules/consult/views/consult_view.dart
+++ b/lib/app/modules/consult/views/consult_view.dart
@@@ -15,21 -15,21 +15,20 @@@ class ConsultView extends GetView<Consu
  
    @override
    Widget build(BuildContext context) {
--    controller.fetchData();
++    //controller.fetchData();
  
      return Scaffold(
        backgroundColor: whiteColor,
        appBar: AppBar(
          toolbarHeight: 85,
--        backgroundColor: Colors.white,
--        shape: const RoundedRectangleBorder(
--            borderRadius: BorderRadius.only(
--              bottomLeft: Radius.circular(24),
--              bottomRight: Radius.circular(24),
--            ),
--            side: BorderSide(color: Colors.black12)),
++        backgroundColor: whiteColor,
++        shape: UnderlineInputBorder(
++          borderSide: BorderSide(
++            color: border,
++          ),
++        ),
          title: Text(
--          'Consult',
++          'Consultation',
            style: h3Bold,
          ),
          centerTitle: true,
@@@ -52,7 -52,7 +51,7 @@@
              }
  
              return ListView.builder(
--              padding: const EdgeInsets.all(8),
++              padding: const EdgeInsets.only(top: 20),
                itemCount: filteredData.length,
                itemBuilder: (BuildContext context, int index) {
                  return GestureDetector(
diff --cc lib/app/modules/consult_schedule/controllers/consult_schedule_controller.dart
index 35f9479,35f9479..d3270e3
--- a/lib/app/modules/consult_schedule/controllers/consult_schedule_controller.dart
+++ b/lib/app/modules/consult_schedule/controllers/consult_schedule_controller.dart
@@@ -1,9 -1,9 +1,32 @@@
  import 'package:get/get.dart';
  
  class ConsultScheduleController extends GetxController {
--  //TODO: Implement ConsultScheduleController
++  // var selectedDay = 1.obs;
++  // var selectedMonth = 1.obs;
++  // final fixedYear = 2025;
++
++  // void setDay(String? value) {
++  //   if (value != null) selectedDay.value = int.parse(value);
++  // }
++
++  // void setMonth(String? value) {
++  //   if (value != null) selectedMonth.value = int.parse(value);
++  // }
++
++  // DateTime get selectedDate =>
++  //     DateTime(fixedYear, selectedMonth.value, selectedDay.value);
++  var selectedDate = DateTime.now().obs;
++  var selectedSchedule = <String, dynamic>{}.obs;
++
++  void updateSelectedDate(DateTime date) {
++    selectedDate.value = date;
++  }
++
++  void updateSelectedSchedule(Map<String, dynamic> schedule) {
++    selectedSchedule.value = schedule;
++    print("Selected schedule in controller: $schedule");
++  }
  
--  final count = 0.obs;
    @override
    void onInit() {
      super.onInit();
@@@ -18,6 -18,6 +41,4 @@@
    void onClose() {
      super.onClose();
    }
--
--  void increment() => count.value++;
  }
diff --cc lib/app/modules/consult_schedule/views/consult_schedule_view.dart
index 4e75a69,4e75a69..a52ec87
--- a/lib/app/modules/consult_schedule/views/consult_schedule_view.dart
+++ b/lib/app/modules/consult_schedule/views/consult_schedule_view.dart
@@@ -1,17 -1,17 +1,15 @@@
  // ignore_for_file: prefer_const_constructors
  
  import 'package:flutter/material.dart';
--
  import 'package:get/get.dart';
  import 'package:temanbicara/app/data/Transaction.dart';
  import 'package:temanbicara/app/modules/transaction/views/transaction_view.dart';
--import 'package:temanbicara/app/routes/app_pages.dart';
  import 'package:temanbicara/app/themes/colors.dart';
  import 'package:temanbicara/app/themes/fonts.dart';
  import 'package:temanbicara/app/themes/spaces.dart';
  import 'package:temanbicara/app/widgets/buttons.dart';
  import 'package:temanbicara/app/widgets/schedule/schedule_details.dart';
--
++import 'package:temanbicara/app/widgets/schedule/select_date.dart';
  import '../controllers/consult_schedule_controller.dart';
  
  class ConsultScheduleView extends GetView<ConsultScheduleController> {
@@@ -30,13 -30,13 +28,12 @@@
        backgroundColor: whiteColor,
        appBar: AppBar(
          toolbarHeight: 85,
--        backgroundColor: Colors.white,
--        shape: const RoundedRectangleBorder(
--            borderRadius: BorderRadius.only(
--              bottomLeft: Radius.circular(24),
--              bottomRight: Radius.circular(24),
--            ),
--            side: BorderSide(color: Colors.black12)),
++        backgroundColor: whiteColor,
++        shape: UnderlineInputBorder(
++          borderSide: BorderSide(
++            color: border,
++          ),
++        ),
          title: Text(
            'Schedules',
            style: h3Bold,
@@@ -44,190 -44,190 +41,106 @@@
          centerTitle: true,
        ),
        body: SingleChildScrollView(
--        physics: NeverScrollableScrollPhysics(),
          child: SafeArea(
--          child: Padding(
--            padding: const EdgeInsets.symmetric(horizontal: 25),
--            child: Column(
--              crossAxisAlignment: CrossAxisAlignment.start,
--              children: [
--                sby24,
--                Container(
--                  height: 127,
--                  width: double.infinity,
--                  child: Row(
--                    children: [
--                      ClipRRect(
--                        borderRadius: BorderRadius.only(
--                          topLeft: Radius.circular(16),
--                          topRight: Radius.circular(16),
--                          bottomLeft: Radius.circular(16),
--                          bottomRight: Radius.circular(16),
--                        ),
--                        child: Image.asset(
--                          'assets/images/Hafid.jpg',
--                          scale: 1.5,
--                          fit: BoxFit.contain,
--                        ),
--                      ),
--                      Expanded(
--                        child: Padding(
--                          padding: const EdgeInsets.only(left: 20, right: 8),
--                          child: Column(
--                            mainAxisAlignment: MainAxisAlignment.center,
--                            crossAxisAlignment: CrossAxisAlignment.start,
--                            children: [
--                              Text(
--                                '${userName}',
--                                style: h6Bold.copyWith(
--                                    overflow: TextOverflow.ellipsis),
--                                maxLines: 2,
--                              ),
--                              sby8,
--                              Expanded(
--                                child: Container(
--                                  width: double.infinity,
--                                  decoration: BoxDecoration(
--                                    borderRadius: BorderRadius.circular(16),
--                                    color: Colors.white,
--                                    boxShadow: [
--                                      BoxShadow(
--                                        color: Color.fromRGBO(0, 0, 0, 0.1),
--                                        blurRadius: 6,
--                                        spreadRadius: -1,
--                                        offset: Offset(
--                                          0,
--                                          4,
--                                        ),
--                                      ),
--                                      BoxShadow(
--                                        color: Color.fromRGBO(0, 0, 0, 0.06),
--                                        blurRadius: 4,
--                                        spreadRadius: -1,
--                                        offset: Offset(
--                                          0,
--                                          2,
--                                        ),
--                                      ),
--                                    ],
--                                  ),
--                                  child: Padding(
--                                    padding: const EdgeInsets.symmetric(
--                                        vertical: 10.0, horizontal: 20),
--                                    child: Column(
--                                      crossAxisAlignment:
--                                          CrossAxisAlignment.start,
--                                      children: [
--                                        Text(
--                                          'Expertise :',
--                                          style: h7Bold,
--                                        ),
--                                        sby5,
--                                        Text(expertise,
--                                            style:
--                                                h6Medium.copyWith(fontSize: 10))
--                                      ],
--                                    ),
--                                  ),
--                                ),
++          child: Column(
++            children: [
++              Image.asset(
++                "assets/images/Hafid.jpg",
++                width: double.infinity,
++                height: 223,
++                fit: BoxFit.cover, // or BoxFit.fill
++              ),
++              Padding(
++                padding: const EdgeInsets.symmetric(horizontal: 25),
++                child: Column(
++                  crossAxisAlignment: CrossAxisAlignment.start,
++                  children: [
++                    sby24,
++                    Text(
++                      userName,
++                      style: h3Bold,
++                    ),
++                    Text(
++                      expertise,
++                      style: h4Regular.copyWith(color: grey2Color),
++                    ),
++                    sby24,
++                    Divider(),
++                    sby24,
++                    Text(
++                      "Select Date",
++                      style: h3Bold,
++                    ),
++                    sby24,
++                    SelectDate(
++                      onDateSelected: (date) {
++                        controller.updateSelectedDate(date);
++                        print('Selected in parent: $date');
++                      },
++                    ),
++                    sby24,
++                    Text(
++                      "Schedules",
++                      style: h3Bold,
++                    ),
++                    sby24,
++                    Obx(() {
++                      final selectedDateStr = controller.selectedDate.value
++                          .toString()
++                          .split(' ')[0];
++
++                      return ScheduleList(
++                        schedule: schedules,
++                        selectedDate: selectedDateStr,
++                        onSelectionChanged: (selected) {
++                          controller.updateSelectedSchedule(selected);
++                          print("Schedule selected in parent: $selected");
++                        },
++                      );
++                    }),
++                    sby24,
++                    MyButton(
++                      get: () async {
++                        if (controller.selectedSchedule.isNotEmpty) {
++                          Get.dialog(
++                            Center(
++                              child: CircularProgressIndicator(
++                                color: primaryColor,
                                ),
--                            ],
--                          ),
--                        ),
--                      ),
--                    ],
--                  ),
--                ),
--                sby24,
--                Text(
--                  "Schedule",
--                  style: h3Bold,
--                ),
--                sby24,
--                ScheduleList(
--                  schedule: schedules,
--                  onSelectionChanged: (selected) {
--                    selectedSchedule = selected;
--                  },
--                ),
--                sby24,
--                MyButton(
--                    get: () async {
--                      if (selectedSchedule.isNotEmpty) {
--                        print(selectedSchedule['time']);
--                        Get.dialog(
--                          Center(
--                            child: CircularProgressIndicator(
--                              color: primaryColor,
                              ),
--                          ),
--                          barrierDismissible: false,
--                        );
++                            barrierDismissible: false,
++                          );
  
--                        await Future.delayed(Duration(seconds: 2));
++                          await Future.delayed(Duration(seconds: 2));
  
--                        Get.back();
--                        Get.to(
--                          () => TransactionView(),
--                          arguments: TransactionModel(
--                            namaPsikiater: userName,
--                            expertise: expertise,
--                            jadwal: selectedSchedule['date']!,
--                            waktu: selectedSchedule['time']!,
--                            selectedID: selectedSchedule['id'],
--                          ),
--                        );
--                      } else {
--                        Get.snackbar(
--                          "Silahkan pilih jadwal konsultasi",
--                          "Please select a date and time before proceeding.",
--                          backgroundColor: error.withOpacity(0.6),
--                          colorText: Colors.white,
--                        );
--                      }
--                    },
--                    color: primaryColor,
--                    text: "Booking Now"),
--                // Center(
--                //   child: SizedBox(
--                //     width: 205,
--                //     height: 42,
--                //     child: ElevatedButton(
--                //       child: Text(
--                //         'Booking Now',
--                //         style: h5Bold.copyWith(color: Colors.white),
--                //       ),
--                //       onPressed: () {
--                //         if (selectedSchedule.isNotEmpty) {
--                //           print(selectedSchedule['time']);
--                //           Get.to(
--                //             () => TransactionView(),
--                //             arguments: TransactionModel(
--                //               namaPsikiater: userName,
--                //               expertise: expertise,
--                //               jadwal: selectedSchedule['date']!,
--                //               waktu: selectedSchedule['time']!,
--                //               selectedID: selectedSchedule['id'],
--                //             ),
--                //           );
--                //         } else {
--                //           Get.snackbar(
--                //             "Silahkan pilih jadwal konsultasi",
--                //             "Please select a date and time before proceeding.",
--                //             backgroundColor: error.withOpacity(0.6),
--                //             colorText: Colors.white,
--                //           );
--                //         }
--                //       },
--                //       style: ButtonStyle(
--                //         backgroundColor:
--                //             WidgetStatePropertyAll<Color>(primaryColor),
--                //       ),
--                //     ),
--                //   ),
--                // ),
--              ],
--            ),
++                          Get.back();
++                          Get.to(
++                            () => TransactionView(),
++                            arguments: TransactionModel(
++                              namaPsikiater: userName,
++                              expertise: expertise,
++                              jadwal: controller.selectedSchedule['date'],
++                              waktu: controller.selectedSchedule['time'],
++                              selectedID: controller.selectedSchedule['id'],
++                            ),
++                          );
++                        } else {
++                          Get.snackbar(
++                            "Silahkan pilih jadwal konsultasi",
++                            "Please select a date and time before proceeding.",
++                            backgroundColor: error.withOpacity(0.6),
++                            colorText: Colors.white,
++                          );
++                        }
++                      },
++                      color: primaryColor,
++                      text: "Booking Now",
++                    ),
++                    sby36,
++                  ],
++                ),
++              ),
++            ],
            ),
          ),
        ),
diff --cc lib/app/modules/transaction/views/transaction_view.dart
index a630e53,a630e53..dc4598c
--- a/lib/app/modules/transaction/views/transaction_view.dart
+++ b/lib/app/modules/transaction/views/transaction_view.dart
@@@ -22,15 -22,15 +22,14 @@@ class TransactionView extends GetView<T
          backgroundColor: whiteColor,
          appBar: AppBar(
            toolbarHeight: 85,
--          backgroundColor: Colors.white,
--          shape: const RoundedRectangleBorder(
--              borderRadius: BorderRadius.only(
--                bottomLeft: Radius.circular(24),
--                bottomRight: Radius.circular(24),
--              ),
--              side: BorderSide(color: Colors.black12)),
++          backgroundColor: whiteColor,
++          shape: UnderlineInputBorder(
++            borderSide: BorderSide(
++              color: border,
++            ),
++          ),
            title: Text(
--            'Trasactions',
++            'Transaction',
              style: h3Bold,
            ),
            centerTitle: true,
diff --cc lib/app/modules/transaction_invoice/controllers/transaction_invoice_controller.dart
index 91daeb6,91daeb6..134ffef
--- a/lib/app/modules/transaction_invoice/controllers/transaction_invoice_controller.dart
+++ b/lib/app/modules/transaction_invoice/controllers/transaction_invoice_controller.dart
@@@ -1,3 -1,3 +1,22 @@@
++import 'dart:io';
++
  import 'package:get/get.dart';
++import 'package:temanbicara/app/data/Invoice.dart';
++import 'package:temanbicara/app/widgets/transaction/invoicePDF.dart';
++
++class TransactionInvoiceController extends GetxController {
++  File? pdfFile;
++  final isLoading = false.obs;
++
++  Future<void> generatePDFIfNeeded(InvoiceModel invoice) async {
++    if (pdfFile == null) {
++      isLoading.value = true;
++      pdfFile = await CreatePDF.generatePDF(invoice);
++      isLoading.value = false;
++    }
++  }
  
--class TransactionInvoiceController extends GetxController {}
++  void resetPDF() {
++    pdfFile = null;
++  }
++}
diff --cc lib/app/modules/transaction_invoice/views/transaction_invoice_view.dart
index da45ed6,da45ed6..4f4ea0c
--- a/lib/app/modules/transaction_invoice/views/transaction_invoice_view.dart
+++ b/lib/app/modules/transaction_invoice/views/transaction_invoice_view.dart
@@@ -1,13 -1,13 +1,18 @@@
  // ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables
  
++import 'dart:io';
++
  import 'package:flutter/material.dart';
++import 'package:flutter_pdfview/flutter_pdfview.dart';
  import 'package:get/get.dart';
++import 'package:share_plus/share_plus.dart';
  import 'package:temanbicara/app/data/Invoice.dart';
  import 'package:temanbicara/app/routes/app_pages.dart';
  import 'package:temanbicara/app/themes/colors.dart';
  import 'package:temanbicara/app/themes/fonts.dart';
  import 'package:temanbicara/app/themes/spaces.dart';
  import 'package:temanbicara/app/widgets/transaction/invoiceData.dart';
++import 'package:temanbicara/app/widgets/transaction/invoicePDF.dart';
  import 'package:temanbicara/app/widgets/transaction/transactionTimelineView.dart';
  
  import '../controllers/transaction_invoice_controller.dart';
@@@ -16,30 -16,30 +21,26 @@@ class TransactionInvoiceView extends Ge
    const TransactionInvoiceView({super.key});
    @override
    Widget build(BuildContext context) {
++    final invoiceController = Get.put(TransactionInvoiceController());
      double screenHeight = MediaQuery.sizeOf(context).height;
      final InvoiceModel invoice = Get.arguments as InvoiceModel;
++
      return PopScope(
        canPop: false,
        child: Scaffold(
          backgroundColor: whiteColor,
          appBar: AppBar(
--          automaticallyImplyLeading: false,
++          toolbarHeight: 85,
            backgroundColor: whiteColor,
++          shape: UnderlineInputBorder(
++            borderSide: BorderSide(
++              color: border,
++            ),
++          ),
            title: Text(
              'Transaction',
              style: h3Bold,
            ),
--          leading: Builder(
--            builder: (BuildContext context) {
--              return IconButton(
--                icon: const Icon(Icons.arrow_back_rounded),
--                onPressed: () {
--                  Get.back();
--                },
--                tooltip: MaterialLocalizations.of(context).openAppDrawerTooltip,
--              );
--            },
--          ),
            centerTitle: true,
          ),
          body: Column(
@@@ -52,76 -52,76 +53,137 @@@
                ),
              ),
              Padding(
--                padding: EdgeInsets.symmetric(horizontal: 28),
--                child: Column(
--                  crossAxisAlignment: CrossAxisAlignment.start,
--                  children: [
--                    sby5,
--                    Text("Invoice", style: h4Bold),
--                    sby24,
--                    // data invoice disini
--                    Container(
--                        height: screenHeight * 0.554,
--                        child: SingleChildScrollView(
--                            child: InvoiceData(invoice: invoice))),
--                    sby16,
--                    Row(
--                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
--                      children: [
--                        Row(
++              padding: EdgeInsets.symmetric(horizontal: 28),
++              child: Column(
++                crossAxisAlignment: CrossAxisAlignment.start,
++                children: [
++                  sby5,
++                  Text("Invoice", style: h4Bold),
++                  sby24,
++                  // data invoice disini
++                  Container(
++                      height: screenHeight * 0.58,
++                      child: SingleChildScrollView(
++                          child: InvoiceData(invoice: invoice))),
++                  sby16,
++                  Row(
++                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
++                    children: [
++                      GestureDetector(
++                        onTap: () async {
++                          await invoiceController.generatePDFIfNeeded(invoice);
++                          if (invoiceController.pdfFile != null) {
++                            Get.to(() => PdfViewerPage(
++                                file: invoiceController.pdfFile!));
++                          }
++                        },
++                        child: Row(
                            children: [
                              sbx5,
                              Image.asset('assets/images/shareInvoice.png'),
                              sbx5,
--                            Text(
--                              "Share Invoice",
--                              style: h6SemiBold.copyWith(color: primaryColor),
--                            ),
++                            Text("Show Invoice",
++                                style:
++                                    h6SemiBold.copyWith(color: primaryColor)),
                            ],
                          ),
--                        Row(
++                      ),
++                      GestureDetector(
++                        onTap: () async {
++                          try {
++                            // Pastikan generatePDFIfNeeded selesai sebelum melanjutkan
++                            await invoiceController
++                                .generatePDFIfNeeded(invoice);
++
++                            final file = invoiceController.pdfFile;
++                            if (file != null) {
++                              final result = await SharePlus.instance.share(
++                                ShareParams(
++                                  text: 'Invoice PDF',
++                                  files: [
++                                    XFile(file.path)
++                                  ], // Pastikan menggunakan XFile
++                                ),
++                              );
++
++                              if (result.status == ShareResultStatus.success) {
++                                print('Thank you for sharing the invoice!');
++                              } else {
++                                print(
++                                    'Failed to share the invoice: ${result.status}');
++                              }
++                            } else {
++                              print('No PDF file found');
++                            }
++                          } catch (e) {
++                            // Tangani error jika terjadi
++                            print('Error occurred: $e');
++                          }
++                        },
++                        child: Row(
                            children: [
--                            Image.asset('assets/images/downloadInvoice.png'),
++                            sbx5,
++                            Image.asset('assets/images/shareInvoice.png'),
                              sbx5,
                              Text(
--                              "Download Invoice",
++                              "Share Invoice",
                                style: h6SemiBold.copyWith(color: primaryColor),
                              ),
--                            sbX12,
                            ],
--                        )
--                      ],
--                    ),
--                    sby16,
--                    Center(
--                      child: SizedBox(
--                        width: 205,
--                        height: 42,
--                        child: ElevatedButton(
--                          child: Text('Next',
--                              style: TextStyle(
--                                  color: Colors.white,
--                                  fontSize: 14,
--                                  fontWeight: FontWeight.bold)),
--                          onPressed: () {
--                            Get.offAllNamed(
--                              Routes.NAVIGATION_BAR,
--                              arguments: {"indexPage": 0},
--                            );
--                          },
--                          style: ButtonStyle(
--                            backgroundColor:
--                                WidgetStatePropertyAll<Color>(primaryColor),
--                          ),
++                        ),
++                      )
++                    ],
++                  ),
++                  sby16,
++                  Center(
++                    child: SizedBox(
++                      width: 205,
++                      height: 42,
++                      child: ElevatedButton(
++                        child: Text('Next',
++                            style: TextStyle(
++                                color: Colors.white,
++                                fontSize: 14,
++                                fontWeight: FontWeight.bold)),
++                        onPressed: () {
++                          Get.offAllNamed(
++                            Routes.NAVIGATION_BAR,
++                            arguments: {"indexPage": 0},
++                          );
++                        },
++                        style: ButtonStyle(
++                          backgroundColor:
++                              WidgetStatePropertyAll<Color>(primaryColor),
                          ),
                        ),
                      ),
--                    sby36,
--                  ],
--                ))
++                  ),
++                  sby12,
++                ],
++              ),
++            ),
            ],
          ),
        ),
      );
    }
  }
++
++class PdfViewerPage extends StatelessWidget {
++  final File file;
++
++  const PdfViewerPage({Key? key, required this.file}) : super(key: key);
++
++  @override
++  Widget build(BuildContext context) {
++    return Scaffold(
++      appBar: AppBar(title: const Text('PDF Preview')),
++      body: PDFView(
++        filePath: file.path,
++        autoSpacing: true,
++        pageFling: true,
++        pageSnap: true,
++      ),
++    );
++  }
++}
diff --cc lib/app/modules/transaction_method/controllers/transaction_method_controller.dart
index 5c2f29d,5c2f29d..47eb17c
--- a/lib/app/modules/transaction_method/controllers/transaction_method_controller.dart
+++ b/lib/app/modules/transaction_method/controllers/transaction_method_controller.dart
@@@ -1,28 -1,28 +1,90 @@@
++import 'dart:convert';
++
  import 'package:flutter/material.dart';
  import 'package:get/get.dart';
++import 'package:get_storage/get_storage.dart';
++import 'package:temanbicara/app/config/config.dart';
  import 'package:temanbicara/app/themes/colors.dart';
  import 'package:temanbicara/app/themes/fonts.dart';
++import 'package:http/http.dart' as http;
  
  class TransactionMethodController extends GetxController {
--  //TODO: Implement TransactionMethodController
++  var selectedMethod = ''.obs;
++  Map<String, dynamic>? consultationResult;
  
--  final count = 0.obs;
--  @override
--  void onInit() {
--    super.onInit();
++  void setMethod(String method) {
++    selectedMethod.value = method;
    }
  
--  @override
--  void onReady() {
--    super.onReady();
--  }
++  var isLoading = false.obs;
  
--  @override
--  void onClose() {
--    super.onClose();
--  }
++  Future<void> createConsultation({
++    required int scheduleId,
++    required int patientId,
++    required int amount,
++    required String bank,
++    String description = "-",
++    String problem = "-",
++    String summary = "-",
++  }) async {
++    final url = Uri.parse('${Config.apiEndPoint}/consultation');
++    final box = GetStorage();
++    final token = box.read('token');
++
++    final Map<String, dynamic> body = {
++      'description': description,
++      'problem': problem,
++      'summary': summary,
++      'schedule_id': scheduleId,
++      'amount': amount,
++      'bank': bank,
++    };
++
++    try {
++      final response = await http.post(
++        url,
++        body: jsonEncode(body),
++        headers: {
++          'Content-Type': 'application/json',
++          'Authorization': 'Bearer $token',
++        },
++      );
++
++      if (response.statusCode == 201) {
++        final responseData = json.decode(response.body);
++        consultationResult = responseData['data'];
++        update();
  
--  void increment() => count.value++;
++        Get.snackbar(
++          'Success',
++          'Consultation created successfully.',
++          backgroundColor: primaryColor.withOpacity(0.6),
++          colorText: Colors.white,
++        );
++      } else {
++        String errorMessage = 'Failed to create consultation.';
++
++        try {
++          final responseBody = json.decode(response.body);
++          errorMessage = responseBody['message'] ?? errorMessage;
++        } catch (_) {}
++
++        Get.snackbar(
++          'Error',
++          errorMessage,
++          backgroundColor: Colors.red.withOpacity(0.6),
++          colorText: Colors.white,
++        );
++      }
++    } catch (error) {
++      Get.snackbar(
++        'Error',
++        'Error creating consultation: $error',
++        backgroundColor: Colors.red.withOpacity(0.6),
++        colorText: Colors.white,
++      );
++    }
++  }
  }
  
  class RadioButtonController extends GetxController {
@@@ -58,3 -58,3 +120,5 @@@ class ToggleButtonController extends Ge
      update();
    }
  }
++
++
diff --cc lib/app/modules/transaction_method/views/transaction_method_view.dart
index 19f2934,19f2934..8a7cc01
--- a/lib/app/modules/transaction_method/views/transaction_method_view.dart
+++ b/lib/app/modules/transaction_method/views/transaction_method_view.dart
@@@ -1,11 -1,11 +1,15 @@@
  import 'package:flutter/material.dart';
  
  import 'package:get/get.dart';
++import 'package:get_storage/get_storage.dart';
  import 'package:temanbicara/app/data/Transaction.dart';
++import 'package:temanbicara/app/modules/transaction_payment/views/transaction_payment_view.dart';
  import 'package:temanbicara/app/themes/colors.dart';
  import 'package:temanbicara/app/themes/fonts.dart';
  import 'package:temanbicara/app/themes/spaces.dart';
++import 'package:temanbicara/app/widgets/buttons.dart';
  import 'package:temanbicara/app/widgets/transaction/chooseMethod.dart';
++import 'package:temanbicara/app/widgets/transaction/concultationPrice.dart';
  import 'package:temanbicara/app/widgets/transaction/transactionTimelineView.dart';
  
  import '../controllers/transaction_method_controller.dart';
@@@ -15,19 -15,19 +19,20 @@@ class TransactionMethodView extends Get
    @override
    Widget build(BuildContext context) {
      final TransactionModel transaction = Get.arguments as TransactionModel;
++    final box = GetStorage();
++    final userID = box.read('id');
      return Scaffold(
        backgroundColor: whiteColor,
        appBar: AppBar(
          toolbarHeight: 85,
--        backgroundColor: Colors.white,
--        shape: const RoundedRectangleBorder(
--            borderRadius: BorderRadius.only(
--              bottomLeft: Radius.circular(24),
--              bottomRight: Radius.circular(24),
--            ),
--            side: BorderSide(color: Colors.black12)),
++        backgroundColor: whiteColor,
++        shape: UnderlineInputBorder(
++          borderSide: BorderSide(
++            color: border,
++          ),
++        ),
          title: Text(
--          'Trasanctions',
++          'Transaction',
            style: h3Bold,
          ),
          centerTitle: true,
@@@ -49,7 -49,7 +54,53 @@@
                  children: [
                    Text("Payment Method", style: h5Bold),
                    sby24,
--                  ChooseMethod(transaction: transaction)
++                  ChooseMethod(
++                    transaction: transaction,
++                    onMethodSelected: (String methodType) {
++                      controller.setMethod(methodType);
++                    },
++                  ),
++                  sby36,
++                  ConcultationPrice(price: transaction.harga),
++                  sby24,
++                  MyButton(
++                    get: () async {
++                      showDialog(
++                        context: Get.context!,
++                        barrierDismissible: false,
++                        builder: (_) => Center(
++                          child: CircularProgressIndicator(color: primaryColor),
++                        ),
++                      );
++                      final consultationFuture = controller.createConsultation(
++                        scheduleId: transaction.selectedID,
++                        patientId: userID,
++                        amount: transaction.harga,
++                        bank:
++                            controller.selectedMethod.toString().toLowerCase(),
++                      );
++
++                      await Future.wait([
++                        consultationFuture,
++                        Future.delayed(Duration(seconds: 2)),
++                      ]);
++                      Navigator.of(Get.context!).pop();
++
++                      final data = controller.consultationResult;
++                      Get.to(
++                        () => TransactionPaymentView(
++                          paymentMethod: "Bank Transfer",
++                        ),
++                        arguments: {
++                          "transaction": transaction,
++                          "data": data,
++                        },
++                      );
++                    },
++                    color: primaryColor,
++                    text: "Book Schedule",
++                  ),
++                  sby24,
                  ],
                ),
              ),
diff --cc lib/app/modules/transaction_payment/controllers/transaction_payment_controller.dart
index 5d31c62,5d31c62..2964482
--- a/lib/app/modules/transaction_payment/controllers/transaction_payment_controller.dart
+++ b/lib/app/modules/transaction_payment/controllers/transaction_payment_controller.dart
@@@ -1,79 -1,79 +1,62 @@@
++import 'dart:async';
  import 'dart:convert';
--
--import 'package:flutter/material.dart';
  import 'package:get/get.dart';
  import 'package:get_storage/get_storage.dart';
  import 'package:http/http.dart' as http;
--import 'package:temanbicara/app/themes/colors.dart';
--
++import 'package:temanbicara/app/routes/app_pages.dart';
  import '../../../config/config.dart';
  
  class TransactionPaymentController extends GetxController {
--  var isLoading = false.obs;
++  final statusPembayaran = "PENDING".obs;
++  final isChecking = false.obs;
++  Timer? _timer;
  
--  Future<void> createConsultation({
--    required int scheduleId,
--    required int patientId,
--    required int amount,
--    required String bank,
--    String description = "-",
--    String problem = "-",
--    String summary = "-",
--  }) async {
--    final url = Uri.parse('${Config.apiEndPoint}/consultation');
--    final box = GetStorage();
--    final token = box.read('token');
++  final box = GetStorage();
++
++  void startChecking(String uuid) {
++    print("Start checking payment for $uuid");
++    _timer = Timer.periodic(Duration(seconds: 10), (timer) {
++      checkPaymentStatus(uuid);
++    });
++  }
  
--    final Map<String, dynamic> body = {
--      'description': description,
--      'problem': problem,
--      'summary': summary,
--      'schedule_id': scheduleId,
--      'amount': amount,
--      'bank': bank,
--    };
++  void stopChecking() {
++    _timer?.cancel();
++  }
  
++  Future<void> checkPaymentStatus(String uuid) async {
      try {
--      final response = await http.post(
--        url,
--        body: jsonEncode(body),
++      isChecking.value = true;
++      final token = box.read('token');
++      final response = await http.get(
++        Uri.parse('${Config.apiEndPoint}/payment/$uuid'),
          headers: {
--          'Content-Type': 'application/json',
            'Authorization': 'Bearer $token',
          },
        );
  
--      if (response.statusCode == 201) {
--        Get.snackbar(
--          'Success',
--          'Consultation created successfully.',
--          backgroundColor: primaryColor.withOpacity(0.6),
--          colorText: Colors.white,
--        );
++      if (response.statusCode == 200) {
++        final data = jsonDecode(response.body);
++        print('Decoded data: $data');
++
++        final status = data['transaction_status'];
++        statusPembayaran.value = status;
++
++        if (['settlement', 'capture']
++            .contains(status.toString().toLowerCase())) {
++          stopChecking();
++          Get.offAllNamed(
++            Routes.NAVIGATION_BAR,
++            arguments: {"indexPage": 0},
++          );
++        }
        } else {
--        // Parse error message from response if possible
--        Map<String, dynamic> responseBody = {};
--        try {
--          responseBody = json.decode(response.body);
--        } catch (_) {}
--
--        String errorMessage = responseBody['message'] ??
--            'Failed to create consultation. Status code: ${response.statusCode}';
--
--        Get.snackbar(
--          'Error',
--          errorMessage,
--          backgroundColor: Colors.red.withOpacity(0.6),
--          colorText: Colors.white,
--        );
++        print('Status code error: ${response.statusCode}');
        }
--    } catch (error) {
--      Get.snackbar(
--        'Error',
--        'Error creating consultation: $error',
--        backgroundColor: Colors.red.withOpacity(0.6),
--        colorText: Colors.white,
--      );
++    } catch (e) {
++      print('Error: $e');
++    } finally {
++      isChecking.value = false;
      }
    }
  }
diff --cc lib/app/modules/transaction_payment/views/transaction_payment_view.dart
index c9f4dc0,c9f4dc0..00e381d
--- a/lib/app/modules/transaction_payment/views/transaction_payment_view.dart
+++ b/lib/app/modules/transaction_payment/views/transaction_payment_view.dart
@@@ -3,6 -3,6 +3,7 @@@ import 'package:get/get.dart'
  import 'package:get_storage/get_storage.dart';
  import 'package:temanbicara/app/data/Invoice.dart';
  import 'package:temanbicara/app/data/Transaction.dart';
++import 'package:temanbicara/app/data/consultResponse.dart';
  import 'package:temanbicara/app/modules/transaction_invoice/views/transaction_invoice_view.dart';
  import 'package:temanbicara/app/routes/app_pages.dart';
  import 'package:temanbicara/app/themes/colors.dart';
@@@ -26,23 -26,23 +27,24 @@@ class TransactionPaymentView extends Ge
    Widget build(BuildContext context) {
      final box = GetStorage();
      final userID = box.read('id');
--    final TransactionModel transaction = Get.arguments as TransactionModel;
++    final data = Get.arguments as Map;
++    final TransactionModel transaction = data["transaction"];
++    final consultationData = ConsultationResponse.fromJson(data["data"]);
++    controller.startChecking(consultationData.transactionId);
      return PopScope(
        canPop: false,
        child: Scaffold(
          backgroundColor: whiteColor,
          appBar: AppBar(
            toolbarHeight: 85,
--          automaticallyImplyLeading: false,
--          backgroundColor: Colors.white,
--          shape: const RoundedRectangleBorder(
--              borderRadius: BorderRadius.only(
--                bottomLeft: Radius.circular(24),
--                bottomRight: Radius.circular(24),
--              ),
--              side: BorderSide(color: Colors.black12)),
++          backgroundColor: whiteColor,
++          shape: UnderlineInputBorder(
++            borderSide: BorderSide(
++              color: border,
++            ),
++          ),
            title: Text(
--            'Trasactions',
++            'Transaction',
              style: h3Bold,
            ),
            centerTitle: true,
@@@ -134,15 -134,15 +136,13 @@@
                      ),
                      sby24,
                      TransactionVaNumberBorder(
--                      vaNumber: '09128120371937',
++                      vaNumber: consultationData.vaNumber,
                      ),
                      sby12,
                      TransactionPriceDetail(
                          invoice: InvoiceModel(
                              transaction: transaction,
                              invoice: "invoice",
--                            appTax: 15000,
--                            admTax: 1000,
                              metodePembayaran: paymentMethod!,
                              hargaTotal: 15000 + 1000 + transaction.harga)),
                      sby24,
@@@ -166,58 -166,58 +166,25 @@@
                        ),
                      ),
                      sby48,
++                    Obx(() {
++                      final status = controller.statusPembayaran.value;
++                      if (['settlement', 'capture']
++                          .contains(status.toLowerCase())) {}
++                      return SizedBox.shrink();
++                    }),
                      Padding(
--                        padding: const EdgeInsets.only(bottom: 45),
--                        child: MyButton(
--                            get: () async {
--                              Get.dialog(
--                                Obx(
--                                  () => AlertDialog(
--                                    content: controller.isLoading.value
--                                        ? Row(
--                                            children: [
--                                              CircularProgressIndicator(
--                                                  color: primaryColor),
--                                              sbX24,
--                                              Text(
--                                                "Loading ...",
--                                                style: h4Regular,
--                                              ),
--                                            ],
--                                          )
--                                        : Text(
--                                            "Berhasil membuat jadwal",
--                                            style: h4Regular,
--                                          ),
--                                  ),
--                                ),
--                                barrierDismissible: false,
--                              );
--                              await controller.createConsultation(
--                                scheduleId: transaction.selectedID,
--                                patientId: userID,
--                                amount: transaction.harga,
--                                bank: paymentMethod!,
--                              );
--
--                              if (!controller.isLoading.value) {
--                                Get.back();
--                              }
--
--                              Get.to(
--                                TransactionInvoiceView(),
--                                arguments: InvoiceModel(
--                                  transaction: transaction,
--                                  invoice: "invoice",
--                                  appTax: 15000,
--                                  admTax: 1000,
--                                  metodePembayaran: paymentMethod!,
--                                  hargaTotal: 15000 + 1000 + transaction.harga,
--                                ),
--                              );
--                            },
--                            color: primaryColor,
--                            text: "Check Payment Status")),
++                      padding: const EdgeInsets.only(bottom: 45),
++                      child: MyButton(
++                        get: () async {
++                          await controller.checkPaymentStatus(
++                            consultationData.transactionId,
++                          );
++                        },
++                        color: primaryColor,
++                        text: "Check Payment Status",
++                      ),
++                    ),
++                    sby16,
                    ],
                  ),
                ),
diff --cc lib/app/routes/app_pages.dart
index 22f7d3a,22f7d3a..dbff1e2
--- a/lib/app/routes/app_pages.dart
+++ b/lib/app/routes/app_pages.dart
@@@ -215,7 -215,7 +215,7 @@@ class AppPages 
      ),
      GetPage(
        name: _Paths.TRANSACTION_METHOD,
--      page: () => const TransactionMethodView(),
++      page: () => TransactionMethodView(),
        binding: TransactionMethodBinding(),
      ),
      GetPage(
diff --cc lib/app/widgets/schedule/counselor_card.dart
index 4238b04,4238b04..27f991e
--- a/lib/app/widgets/schedule/counselor_card.dart
+++ b/lib/app/widgets/schedule/counselor_card.dart
@@@ -21,7 -21,7 +21,7 @@@ class CounselorCard extends StatelessWi
        padding: const EdgeInsets.only(bottom: 14, left: 20, right: 20),
        child: Container(
          width: double.infinity,
--        height: 131,
++        height: 150,
          decoration: BoxDecoration(
              boxShadow: [
                BoxShadow(
diff --cc lib/app/widgets/schedule/schedule_details.dart
index 290a9a5,290a9a5..bfe96f9
--- a/lib/app/widgets/schedule/schedule_details.dart
+++ b/lib/app/widgets/schedule/schedule_details.dart
@@@ -1,161 -1,161 +1,95 @@@
++// ignore_for_file: prefer_const_constructors
++
  import 'package:flutter/material.dart';
  import 'package:intl/intl.dart';
  import 'package:get/get.dart';
++import 'package:temanbicara/app/modules/consult_schedule/controllers/consult_schedule_controller.dart';
++import 'package:temanbicara/app/themes/colors.dart';
  import 'package:temanbicara/app/themes/fonts.dart';
--import 'package:temanbicara/app/themes/spaces.dart';
--
--class ScheduleController extends GetxController {
--  final Rx<Map<String, dynamic>> selectedSchedule =
--      Rx<Map<String, dynamic>>({});
--  final ValueChanged<Map<String, dynamic>> onSelectionChanged;
--
--  ScheduleController({required this.onSelectionChanged});
--
--  void toggleSelection(String date, String timeSlot, int id) {
--    if (selectedSchedule.value['date'] == date &&
--        selectedSchedule.value['time'] == timeSlot) {
--      selectedSchedule.value = {};
--    } else {
--      selectedSchedule.value = {
--        'date': date,
--        'time': timeSlot,
--        'id': id,
--      };
--    }
--    onSelectionChanged(selectedSchedule.value);
--  }
--
--  bool isSelected(String date, String timeSlot) {
--    return selectedSchedule.value['date'] == date &&
--        selectedSchedule.value['time'] == timeSlot;
--  }
--
--  String getDayName(String date) {
--    DateTime dateTime = DateTime.parse(date);
--    return DateFormat('EEEE').format(dateTime);
--  }
--}
  
  class ScheduleList extends StatelessWidget {
    final List schedule;
    final ValueChanged<Map<String, dynamic>> onSelectionChanged;
++  final String selectedDate;
  
    const ScheduleList({
      Key? key,
      required this.schedule,
      required this.onSelectionChanged,
++    required this.selectedDate,
    }) : super(key: key);
  
    @override
    Widget build(BuildContext context) {
--    final controller =
--        Get.put(ScheduleController(onSelectionChanged: onSelectionChanged));
--    double screenWidth = MediaQuery.of(context).size.width;
--    double screenHeight = MediaQuery.of(context).size.height;
++    final controller = Get.find<ConsultScheduleController>();
++    final daySchedule = schedule.firstWhere(
++      (e) => e['date'] == selectedDate,
++      orElse: () => null,
++    );
  
--    return Container(
--      decoration: BoxDecoration(
--        borderRadius: BorderRadius.circular(20),
--        color: Colors.white,
--      ),
--      height: screenHeight * 0.48,
--      child: ListView.builder(
--        itemCount: schedule.length,
--        itemBuilder: (BuildContext context, int index) {
--          List scheduleDay = schedule[index]['schedulesByDate'];
--          String date = schedule[index]['date'];
--          return Column(
--            children: [
--              Container(
--                decoration: BoxDecoration(
--                  borderRadius: BorderRadius.circular(20),
--                  color: Colors.white,
--                  boxShadow: [
--                    BoxShadow(
--                      color: Color.fromRGBO(9, 30, 66, 0.25),
--                      blurRadius: 8,
--                      spreadRadius: -2,
--                      offset: Offset(0, 4),
--                    ),
--                    BoxShadow(
--                      color: Color.fromRGBO(9, 30, 66, 0.08),
--                      blurRadius: 0,
--                      spreadRadius: 1,
--                      offset: Offset(0, 0),
--                    ),
--                  ],
--                ),
--                child: Padding(
--                  padding: const EdgeInsets.all(20.0),
--                  child: Column(
--                    crossAxisAlignment: CrossAxisAlignment.start,
--                    children: [
--                      Text("${controller.getDayName(date)}, ${date}",
--                          style: h3Bold),
--                      sby16,
--                      Text("Available Time : ", style: h4Bold),
--                      sby12,
--                      SizedBox(
--                        height: (scheduleDay.length * 47),
--                        child: ListView.builder(
--                          physics: NeverScrollableScrollPhysics(),
--                          itemCount: scheduleDay.length,
--                          itemBuilder: (BuildContext ctx, int idx) {
--                            int id = scheduleDay[idx]['schedule_id'];
--                            String startTime = DateFormat('HH:mm').format(
--                                DateFormat('HH:mm:ss')
--                                    .parse(scheduleDay[idx]['start_time']));
--                            String endTime = DateFormat('HH:mm').format(
--                                DateFormat('HH:mm:ss')
--                                    .parse(scheduleDay[idx]['end_time']));
--                            String timeSlot = '$startTime - $endTime';
++    if (daySchedule == null) {
++      return Center(child: Text("No schedule available for this date"));
++    }
++
++    List scheduleDay = daySchedule['schedulesByDate'];
  
--                            return GetX<ScheduleController>(
--                              builder: (ctrl) => GestureDetector(
--                                onTap: () {
--                                  ctrl.toggleSelection(date, timeSlot, id);
--                                },
--                                child: Container(
--                                  margin: EdgeInsets.only(
--                                      right: screenWidth / 2.1, bottom: 10),
--                                  decoration: BoxDecoration(
--                                    borderRadius: BorderRadius.circular(50),
--                                    border: Border.all(
--                                      color: Color(0xFF7D944D),
--                                      width: 1.5,
--                                    ),
--                                    color: ctrl.isSelected(date, timeSlot)
--                                        ? Color(0xFF7D944D)
--                                        : Colors.transparent,
--                                  ),
--                                  child: Padding(
--                                    padding: const EdgeInsets.symmetric(
--                                        vertical: 8, horizontal: 15),
--                                    child: Text(
--                                      timeSlot,
--                                      style: h7Bold.copyWith(
--                                        fontSize: 12,
--                                        color: ctrl.isSelected(date, timeSlot)
--                                            ? Colors.white
--                                            : Colors.black,
--                                      ),
--                                    ),
--                                  ),
--                                ),
--                              ),
--                            );
--                          },
--                        ),
++    return Column(
++      crossAxisAlignment: CrossAxisAlignment.start,
++      children: [
++        Container(
++          width: double.infinity,
++          child: Wrap(
++            spacing: 16,
++            runSpacing: 16,
++            alignment: WrapAlignment.start,
++            children: List.generate(scheduleDay.length, (idx) {
++              int id = scheduleDay[idx]['schedule_id'];
++              String startTime = DateFormat('HH:mm').format(
++                  DateFormat('HH:mm:ss').parse(scheduleDay[idx]['start_time']));
++              String endTime = DateFormat('HH:mm').format(
++                  DateFormat('HH:mm:ss').parse(scheduleDay[idx]['end_time']));
++              String timeSlot = '$startTime - $endTime';
++
++              return Obx(() {
++                final isSelected =
++                    controller.selectedSchedule['date'] == selectedDate &&
++                        controller.selectedSchedule['time'] == timeSlot;
++
++                return GestureDetector(
++                  onTap: () {
++                    final newSelection = {
++                      'date': selectedDate,
++                      'time': timeSlot,
++                      'id': id,
++                    };
++                    controller.updateSelectedSchedule(newSelection);
++                    onSelectionChanged(newSelection);
++                  },
++                  child: Container(
++                    width: MediaQuery.of(context).size.width * 0.33,
++                    height: 45,
++                    decoration: BoxDecoration(
++                      borderRadius: BorderRadius.circular(50),
++                      border: Border.all(
++                        color: grey4Color,
                        ),
--                    ],
++                      color: isSelected ? primaryColor : Colors.transparent,
++                    ),
++                    alignment: Alignment.center,
++                    child: Text(
++                      timeSlot,
++                      style: h4SemiBold.copyWith(
++                        color:
++                            isSelected ? Colors.white : const Color(0xFF1E293B),
++                      ),
++                    ),
                    ),
--                ),
--              ),
--              sby24,
--            ],
--          );
--        },
--      ),
++                );
++              });
++            }),
++          ),
++        ),
++      ],
      );
    }
  }
diff --cc lib/app/widgets/transaction/bankMethodList.dart
index f1b952e,f1b952e..465d773
--- a/lib/app/widgets/transaction/bankMethodList.dart
+++ b/lib/app/widgets/transaction/bankMethodList.dart
@@@ -1,109 -1,109 +1,64 @@@
++// ignore_for_file: prefer_const_constructors
++
  import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--import 'package:temanbicara/app/data/Transaction.dart';
--import 'package:temanbicara/app/modules/transaction_method/controllers/transaction_method_controller.dart';
--import 'package:temanbicara/app/modules/transaction_payment/views/transaction_payment_view.dart';
  import 'package:temanbicara/app/themes/colors.dart';
--import 'package:temanbicara/app/themes/spaces.dart';
--import 'package:temanbicara/app/widgets/buttons.dart';
--import 'package:temanbicara/app/widgets/transaction/concultationPrice.dart';
  import 'package:temanbicara/app/widgets/transaction/paymentMethodRow.dart';
  
  List<String> bankTransferList = ["BCA", "BNI", "BRI", "CIMB"];
  
  class BankPaymentMethodList extends StatelessWidget {
--  final TransactionModel transaction;
--  const BankPaymentMethodList({super.key, required this.transaction});
++  final Function(String methodType) onMethodSelected;
++
++  const BankPaymentMethodList({
++    super.key,
++    required this.onMethodSelected,
++  });
  
    @override
    Widget build(BuildContext context) {
--    final radioController = Get.put(RadioButtonController());
--    Get.put(RadioButtonController());
++    void onSelect(String bank) {
++      onMethodSelected(bank);
++    }
++
      return Column(
        children: [
          Container(
            width: double.infinity,
            decoration: BoxDecoration(
--              border: Border.all(color: primaryColor),
--              borderRadius: BorderRadius.circular(20)),
++            border: Border.all(color: primaryColor),
++            borderRadius: BorderRadius.circular(20),
++          ),
            child: Padding(
--            padding: EdgeInsets.only(left: 25, right: 33, bottom: 25, top: 25),
++            padding: EdgeInsets.all(25),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
--              children: [
--                PaymentMethodRow(
--                    label: "BCA", value: bankTransferList[0], logo: "bcaLogo"),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                    label: "BNI", value: bankTransferList[1], logo: "bniLogo"),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                    label: "BRI", value: bankTransferList[2], logo: "briLogo"),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                    label: "CIMB",
--                    value: bankTransferList[3],
--                    logo: "cimbLogo"),
--              ],
++              children: bankTransferList.map((bank) {
++                return Column(
++                  children: [
++                    GestureDetector(
++                      onTap: () => onSelect(bank),
++                      child: PaymentMethodRow(
++                        label: bank,
++                        value: bank,
++                        logo: "${bank.toLowerCase()}Logo",
++                        onTap: () => onMethodSelected(bank),
++                      ),
++                    ),
++                    if (bank != bankTransferList.last)
++                      Padding(
++                        padding: const EdgeInsets.symmetric(vertical: 15),
++                        child: Divider(
++                          height: 1,
++                          thickness: 1.5,
++                          color: grey4Color,
++                        ),
++                      ),
++                  ],
++                );
++              }).toList(),
              ),
            ),
          ),
--        sby24,
--        ConcultationPrice(price: transaction.harga),
--        sby36,
--        MyButton(
--          get: () async {
--            if (radioController.methodType.isNotEmpty) {
--              Get.dialog(
--                Center(
--                  child: CircularProgressIndicator(
--                    color: primaryColor,
--                  ),
--                ),
--                barrierDismissible: false,
--              );
--
--              await Future.delayed(Duration(seconds: 2));
--
--              Get.back();
--              Get.to(
--                  () => TransactionPaymentView(
--                        paymentMethod: radioController.methodType,
--                      ),
--                  arguments: transaction);
--            } else {
--              Get.snackbar(
--                backgroundColor: error.withOpacity(0.6),
--                colorText: Colors.white,
--                "Silahkan pilih Metode Pembayaran",
--                "Please select payment method before proceeding.",
--              );
--            }
--          },
--          color: primaryColor,
--          text: "Next",
--        ),
        ],
      );
    }
diff --cc lib/app/widgets/transaction/chooseMethod.dart
index 23f7b3f,23f7b3f..278454c
--- a/lib/app/widgets/transaction/chooseMethod.dart
+++ b/lib/app/widgets/transaction/chooseMethod.dart
@@@ -10,7 -10,7 +10,13 @@@ import 'package:temanbicara/app/widgets
  
  class ChooseMethod extends StatelessWidget {
    final TransactionModel transaction;
--  const ChooseMethod({super.key, required this.transaction});
++  final Function(String methodType) onMethodSelected;
++
++  const ChooseMethod({
++    super.key,
++    required this.transaction,
++    required this.onMethodSelected,
++  });
  
    @override
    Widget build(BuildContext context) {
@@@ -43,7 -43,7 +49,10 @@@
              ),
              sby24,
              PaymentMethodIndex(
--                index: controller.selectedIndex, transaction: transaction)
++              index: controller.selectedIndex,
++              transaction: transaction,
++              onMethodSelected: onMethodSelected,
++            ),
            ],
          );
        },
@@@ -54,17 -54,17 +63,31 @@@
  class PaymentMethodIndex extends StatelessWidget {
    final int index;
    final TransactionModel transaction;
--  const PaymentMethodIndex(
--      {super.key, required this.index, required this.transaction});
++  final Function(String methodType) onMethodSelected;
++
++  const PaymentMethodIndex({
++    super.key,
++    required this.index,
++    required this.transaction,
++    required this.onMethodSelected,
++  });
  
    @override
    Widget build(BuildContext context) {
--    if (index == 0) {
--      return EWalletMethodList(transaction: transaction);
--    } else if (index == 1) {
--      return BankPaymentMethodList(transaction: transaction);
--    } else {
--      return CreditCardMethodList(transaction: transaction);
++    switch (index) {
++      case 0:
++        return EWalletMethodList(
++          onMethodSelected: onMethodSelected,
++        );
++      case 1:
++        return BankPaymentMethodList(
++          onMethodSelected: onMethodSelected,
++        );
++      default:
++        return CreditCardMethodList(
++          transaction: transaction,
++          onMethodSelected: onMethodSelected,
++        );
      }
    }
  }
diff --cc lib/app/widgets/transaction/creditCardMethodList.dart
index 42acdd6,42acdd6..478d464
--- a/lib/app/widgets/transaction/creditCardMethodList.dart
+++ b/lib/app/widgets/transaction/creditCardMethodList.dart
@@@ -1,95 -1,95 +1,66 @@@
  import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--import 'package:get/get_core/src/get_main.dart';
  import 'package:temanbicara/app/data/Transaction.dart';
--import 'package:temanbicara/app/modules/transaction_method/controllers/transaction_method_controller.dart';
--import 'package:temanbicara/app/modules/transaction_payment/views/transaction_payment_view.dart';
  import 'package:temanbicara/app/themes/colors.dart';
--import 'package:temanbicara/app/themes/spaces.dart';
--import 'package:temanbicara/app/widgets/buttons.dart';
--import 'package:temanbicara/app/widgets/transaction/concultationPrice.dart';
  import 'package:temanbicara/app/widgets/transaction/paymentMethodRow.dart';
  
  List<String> creditCardList = ["Visa", "Mastercard"];
  
  class CreditCardMethodList extends StatelessWidget {
    final TransactionModel transaction;
--  const CreditCardMethodList({super.key, required this.transaction});
++  final Function(String methodType) onMethodSelected;
++
++  const CreditCardMethodList({
++    super.key,
++    required this.transaction,
++    required this.onMethodSelected,
++  });
  
    @override
    Widget build(BuildContext context) {
--    final radioController = Get.put(RadioButtonController());
++    void onSelect(String card) {
++      onMethodSelected(card);
++    }
++
      return Column(
        children: [
          Container(
            width: double.infinity,
            decoration: BoxDecoration(
--              border: Border.all(color: primaryColor),
--              borderRadius: BorderRadius.circular(20)),
++            border: Border.all(color: primaryColor),
++            borderRadius: BorderRadius.circular(20),
++          ),
            child: Padding(
--            padding: EdgeInsets.only(left: 25, right: 33, bottom: 25, top: 25),
++            padding: const EdgeInsets.all(25),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
--              children: [
--                PaymentMethodRow(
--                  label: "Visa",
--                  value: creditCardList[0],
--                  logo: "visaLogo",
--                  isAvailable: false,
--                ),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                  label: "MasterCard",
--                  value: creditCardList[1],
--                  logo: "mastercardLogo",
--                  isAvailable: false,
--                ),
--              ],
++              children: creditCardList.map((card) {
++                return Column(
++                  children: [
++                    GestureDetector(
++                      onTap: () => onSelect(card),
++                      child: PaymentMethodRow(
++                        label: card,
++                        value: card,
++                        logo: "${card.toLowerCase()}Logo",
++                        onTap: () => onMethodSelected(card),
++                        isAvailable: false,
++                      ),
++                    ),
++                    if (card != creditCardList.last)
++                      const Padding(
++                        padding: EdgeInsets.symmetric(vertical: 15),
++                        child: Divider(
++                          height: 1,
++                          thickness: 1.5,
++                          color: grey4Color,
++                        ),
++                      ),
++                  ],
++                );
++              }).toList(),
              ),
            ),
          ),
--        sby24,
--        ConcultationPrice(price: transaction.harga),
--        sby36,
--        MyButton(
--          get: () async {
--            if (radioController.methodType.isNotEmpty) {
--              Get.dialog(
--                Center(
--                  child: CircularProgressIndicator(
--                    color: primaryColor,
--                  ),
--                ),
--                barrierDismissible: false,
--              );
--
--              await Future.delayed(Duration(seconds: 2));
--
--              Get.back();
--              Get.to(
--                  () => TransactionPaymentView(
--                        paymentMethod: radioController.methodType,
--                      ),
--                  arguments: transaction);
--            } else {
--              Get.snackbar(
--                backgroundColor: error.withOpacity(0.6),
--                colorText: Colors.white,
--                "Silahkan pilih Metode Pembayaran",
--                "Please select payment method before proceeding.",
--              );
--            }
--          },
--          color: primaryColor,
--          text: "Next",
--        ),
        ],
      );
    }
diff --cc lib/app/widgets/transaction/eWalletMethodList.dart
index 51edddd,51edddd..5ed2945
--- a/lib/app/widgets/transaction/eWalletMethodList.dart
+++ b/lib/app/widgets/transaction/eWalletMethodList.dart
@@@ -1,124 -1,124 +1,63 @@@
  import 'package:flutter/material.dart';
--import 'package:get/get.dart';
--import 'package:get/get_core/src/get_main.dart';
--import 'package:temanbicara/app/data/Transaction.dart';
--import 'package:temanbicara/app/modules/transaction_method/controllers/transaction_method_controller.dart';
--import 'package:temanbicara/app/modules/transaction_payment/views/transaction_payment_view.dart';
--import 'package:temanbicara/app/routes/app_pages.dart';
  import 'package:temanbicara/app/themes/colors.dart';
--import 'package:temanbicara/app/themes/spaces.dart';
--import 'package:temanbicara/app/widgets/buttons.dart';
--import 'package:temanbicara/app/widgets/transaction/concultationPrice.dart';
  import 'package:temanbicara/app/widgets/transaction/paymentMethodRow.dart';
  
  List<String> EWalletList = ["Gopay", "ShopeePay", "OVO", "Dana"];
  
  class EWalletMethodList extends StatelessWidget {
--  final TransactionModel transaction;
--  const EWalletMethodList({super.key, required this.transaction});
++  final Function(String methodType) onMethodSelected;
++
++  const EWalletMethodList({
++    super.key,
++    required this.onMethodSelected,
++  });
  
    @override
    Widget build(BuildContext context) {
--    final radioController = Get.put(RadioButtonController());
++    void onSelect(String wallet) {
++      onMethodSelected(wallet);
++    }
++
      return Column(
        children: [
          Container(
            width: double.infinity,
            decoration: BoxDecoration(
--              border: Border.all(color: primaryColor),
--              borderRadius: BorderRadius.circular(20)),
++            border: Border.all(color: primaryColor),
++            borderRadius: BorderRadius.circular(20),
++          ),
            child: Padding(
--            padding: EdgeInsets.only(left: 25, right: 33, bottom: 25, top: 25),
++            padding: const EdgeInsets.all(25),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
--              children: [
--                PaymentMethodRow(
--                  label: "Gopay",
--                  value: EWalletList[0],
--                  logo: "gopayLogo",
--                  isAvailable: false,
--                ),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                  label: "ShopeePay",
--                  value: EWalletList[1],
--                  logo: "shopeePayLogo",
--                  isAvailable: false,
--                ),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                  label: "OVO",
--                  value: EWalletList[2],
--                  logo: "ovoLogo",
--                  isAvailable: false,
--                ),
--                Padding(
--                  padding: EdgeInsets.symmetric(vertical: 15),
--                  child: Divider(
--                    height: 1,
--                    thickness: 1.5,
--                    color: grey4Color,
--                  ),
--                ),
--                PaymentMethodRow(
--                  label: "Dana",
--                  value: EWalletList[3],
--                  logo: "danaLogo",
--                  isAvailable: false,
--                ),
--              ],
++              children: EWalletList.map((wallet) {
++                return Column(
++                  children: [
++                    GestureDetector(
++                      onTap: () => onSelect(wallet),
++                      child: PaymentMethodRow(
++                        label: wallet,
++                        value: wallet,
++                        logo: "${wallet.toLowerCase()}Logo",
++                        onTap: () => onMethodSelected(wallet),
++                        isAvailable: false,
++                      ),
++                    ),
++                    if (wallet != EWalletList.last)
++                      const Padding(
++                        padding: EdgeInsets.symmetric(vertical: 15),
++                        child: Divider(
++                          height: 1,
++                          thickness: 1.5,
++                          color: grey4Color,
++                        ),
++                      ),
++                  ],
++                );
++              }).toList(),
              ),
            ),
          ),
--        sby24,
--        ConcultationPrice(price: transaction.harga),
--        sby36,
--        MyButton(
--          get: () async {
--            if (radioController.methodType.isNotEmpty) {
--              Get.dialog(
--                Center(
--                  child: CircularProgressIndicator(
--                    color: primaryColor,
--                  ),
--                ),
--                barrierDismissible: false,
--              );
--
--              await Future.delayed(Duration(seconds: 2));
--
--              Get.back();
--              Get.to(
--                  () => TransactionPaymentView(
--                        paymentMethod: radioController.methodType,
--                      ),
--                  arguments: transaction);
--            } else {
--              Get.snackbar(
--                backgroundColor: error.withOpacity(0.6),
--                colorText: Colors.white,
--                "Silahkan pilih Metode Pembayaran",
--                "Please select payment method before proceeding.",
--              );
--            }
--          },
--          color: primaryColor,
--          text: "Next",
--        ),
        ],
      );
    }
diff --cc lib/app/widgets/transaction/invoiceData.dart
index 0d1b46e,0d1b46e..0c4fa10
--- a/lib/app/widgets/transaction/invoiceData.dart
+++ b/lib/app/widgets/transaction/invoiceData.dart
@@@ -175,7 -175,7 +175,8 @@@ class InvoiceData extends StatelessWidg
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text("Application Tax.", style: h6Bold),
--                    Text(CurrencyFormat.convertToIdr(invoice.appTax, 2))
++                    Text(CurrencyFormat.convertToIdr(
++                        invoice.transaction.appTax, 2))
                    ],
                  ),
                  sby12,
@@@ -183,7 -183,7 +184,8 @@@
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text("Administration Tax.", style: h6Bold),
--                    Text(CurrencyFormat.convertToIdr(invoice.admTax, 2))
++                    Text(CurrencyFormat.convertToIdr(
++                        invoice.transaction.admTax, 2))
                    ],
                  ),
                  sby24,
diff --cc lib/app/widgets/transaction/paymentMethodRow.dart
index 1eb7f28,1eb7f28..631de31
--- a/lib/app/widgets/transaction/paymentMethodRow.dart
+++ b/lib/app/widgets/transaction/paymentMethodRow.dart
@@@ -10,6 -10,6 +10,7 @@@ class PaymentMethodRow extends Stateles
    final String value;
    final String logo;
    final bool isAvailable;
++  final VoidCallback? onTap;
  
    const PaymentMethodRow({
      super.key,
@@@ -17,16 -17,16 +18,22 @@@
      required this.value,
      required this.logo,
      this.isAvailable = true,
++    this.onTap,
    });
  
    @override
    Widget build(BuildContext context) {
--    return GetBuilder<RadioButtonController>(builder: (RadioButtonController) {
++    final radioController = Get.put(RadioButtonController());
++
++    return GetBuilder<RadioButtonController>(builder: (_) {
        return Stack(
          children: [
            InkWell(
              onTap: isAvailable
--                ? () => RadioButtonController.setMethodType(value)
++                ? () {
++                    radioController.setMethodType(value);
++                    if (onTap != null) onTap!(); // 🔥 Trigger parent callback
++                  }
                  : null,
              child: Row(
                children: [
@@@ -37,19 -37,19 +44,21 @@@
                  ),
                  sbX12,
                  Opacity(
++                  opacity: isAvailable ? 1 : 0,
                    child: Image.asset(
                      "assets/images/$logo.png",
                      scale: 2,
                    ),
--                  opacity: isAvailable ? 1 : 0,
                  ),
                  Spacer(),
                  Radio<String>(
                    value: value,
--                  groupValue: RadioButtonController.methodType,
++                  groupValue: radioController.methodType,
                    onChanged: isAvailable
--                      ? (String? value) =>
--                          RadioButtonController.setMethodType(value!)
++                      ? (String? val) {
++                          radioController.setMethodType(val!);
++                          if (onTap != null) onTap!();
++                        }
                        : null,
                    activeColor: primaryColor,
                  ),
diff --cc lib/app/widgets/transaction/transactionPriceDetail.dart
index d9cc947,d9cc947..bf3a69b
--- a/lib/app/widgets/transaction/transactionPriceDetail.dart
+++ b/lib/app/widgets/transaction/transactionPriceDetail.dart
@@@ -51,7 -51,7 +51,7 @@@ class TransactionPriceDetail extends St
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text("Application Tax.", style: h7SemiBold),
--                Text(CurrencyFormat.convertToIdr(invoice.appTax, 2),
++                Text(CurrencyFormat.convertToIdr(invoice.transaction.appTax, 2),
                      style: h7SemiBold.copyWith(color: grey2Color))
                ],
              ),
@@@ -60,7 -60,7 +60,7 @@@
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text("Administration Tax.", style: h7SemiBold),
--                Text(CurrencyFormat.convertToIdr(invoice.admTax, 2),
++                Text(CurrencyFormat.convertToIdr(invoice.transaction.admTax, 2),
                      style: h7SemiBold.copyWith(color: grey2Color))
                ],
              ),
diff --cc lib/app/widgets/transaction/transactionVANumber.dart
index 3344e0a,3344e0a..758b584
--- a/lib/app/widgets/transaction/transactionVANumber.dart
+++ b/lib/app/widgets/transaction/transactionVANumber.dart
@@@ -43,10 -43,10 +43,16 @@@ class TransactionVaNumberBorder extend
                      style: h7Bold,
                    ),
                    Spacer(),
--                  Text(
--                    vaNumber,
--                    style: h7SemiBold.copyWith(
--                        fontStyle: FontStyle.italic, color: grey2Color),
++                  Flexible(
++                    child: Text(
++                      vaNumber,
++                      style: h7SemiBold.copyWith(
++                        fontStyle: FontStyle.italic,
++                        color: grey2Color,
++                      ),
++                      overflow: TextOverflow.ellipsis,
++                      maxLines: 1,
++                    ),
                    ),
                    sbX12,
                    Icon(
diff --cc macos/Flutter/GeneratedPluginRegistrant.swift
index 0c8a854,0c8a854..634ff0a
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@@ -11,6 -11,6 +11,7 @@@ import firebase_cor
  import firebase_messaging
  import flutter_local_notifications
  import path_provider_foundation
++import share_plus
  import shared_preferences_foundation
  import url_launcher_macos
  
@@@ -21,6 -21,6 +22,7 @@@ func RegisterGeneratedPlugins(registry
    FLTFirebaseMessagingPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseMessagingPlugin"))
    FlutterLocalNotificationsPlugin.register(with: registry.registrar(forPlugin: "FlutterLocalNotificationsPlugin"))
    PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
++  SharePlusMacosPlugin.register(with: registry.registrar(forPlugin: "SharePlusMacosPlugin"))
    SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
    UrlLauncherPlugin.register(with: registry.registrar(forPlugin: "UrlLauncherPlugin"))
  }
diff --cc pubspec.lock
index 3045916,3045916..5987e45
--- a/pubspec.lock
+++ b/pubspec.lock
@@@ -33,6 -33,6 +33,22 @@@ packages
        url: "https://pub.dev"
      source: hosted
      version: "2.11.0"
++  barcode:
++    dependency: transitive
++    description:
++      name: barcode
++      sha256: "7b6729c37e3b7f34233e2318d866e8c48ddb46c1f7ad01ff7bb2a8de1da2b9f4"
++      url: "https://pub.dev"
++    source: hosted
++    version: "2.2.9"
++  bidi:
++    dependency: transitive
++    description:
++      name: bidi
++      sha256: "77f475165e94b261745cf1032c751e2032b8ed92ccb2bf5716036db79320637d"
++      url: "https://pub.dev"
++    source: hosted
++    version: "2.0.13"
    boolean_selector:
      dependency: transitive
      description:
@@@ -153,6 -153,6 +169,13 @@@
        url: "https://pub.dev"
      source: hosted
      version: "1.0.6"
++  datepicker_dropdown:
++    dependency: "direct main"
++    description:
++      path: "lib/app/packages/dropdown_date_picker"
++      relative: true
++    source: path
++    version: "0.1.7"
    dbus:
      dependency: transitive
      description:
@@@ -209,6 -209,6 +232,14 @@@
        url: "https://pub.dev"
      source: hosted
      version: "2.1.1"
++  dropdown_button2:
++    dependency: "direct main"
++    description:
++      name: dropdown_button2
++      sha256: b0fe8d49a030315e9eef6c7ac84ca964250155a6224d491c1365061bc974a9e1
++      url: "https://pub.dev"
++    source: hosted
++    version: "2.3.9"
    dropdown_search:
      dependency: "direct main"
      description:
@@@ -217,6 -217,6 +248,14 @@@
        url: "https://pub.dev"
      source: hosted
      version: "6.0.2"
++  easy_date_timeline:
++    dependency: "direct main"
++    description:
++      name: easy_date_timeline
++      sha256: "0fb8fe360d78b7ccb409da9de0e8a71e8e06f0e8a60ea6c54dabf830479309b2"
++      url: "https://pub.dev"
++    source: hosted
++    version: "2.0.9"
    equatable:
      dependency: transitive
      description:
@@@ -459,14 -459,14 +498,22 @@@
        url: "https://pub.dev"
      source: hosted
      version: "2.2.1"
++  flutter_pdfview:
++    dependency: "direct main"
++    description:
++      name: flutter_pdfview
++      sha256: "51413e36ab3f1a2fe0edf97ebfa770e20182ea4a066bc9f292920330d9245c9d"
++      url: "https://pub.dev"
++    source: hosted
++    version: "1.4.0+1"
    flutter_plugin_android_lifecycle:
      dependency: transitive
      description:
        name: flutter_plugin_android_lifecycle
--      sha256: "5a1e6fb2c0561958d7e4c33574674bda7b77caaca7a33b758876956f2902eea3"
++      sha256: f948e346c12f8d5480d2825e03de228d0eb8c3a737e4cdaa122267b89c022b5e
        url: "https://pub.dev"
      source: hosted
--    version: "2.0.27"
++    version: "2.0.28"
    flutter_sliding_up_panel:
      dependency: "direct main"
      description:
@@@ -585,11 -585,11 +632,10 @@@
      dependency: transitive
      description:
        name: image_picker_android
--
--      sha256: "8bd392ba8b0c8957a157ae0dc9fcf48c58e6c20908d5880aea1d79734df090e9"
++      sha256: "317a5d961cec5b34e777b9252393f2afbd23084aa6e60fcf601dcf6341b9ebeb"
        url: "https://pub.dev"
      source: hosted
--    version: "0.8.12+22"
++    version: "0.8.12+23"
    image_picker_for_web:
      dependency: transitive
      description:
@@@ -758,8 -758,8 +804,16 @@@
        url: "https://pub.dev"
      source: hosted
      version: "1.9.0"
--  path_provider:
++  path_parsing:
      dependency: transitive
++    description:
++      name: path_parsing
++      sha256: "883402936929eac138ee0a45da5b0f2c80f89913e6dc3bf77eb65b84b409c6ca"
++      url: "https://pub.dev"
++    source: hosted
++    version: "1.1.0"
++  path_provider:
++    dependency: "direct main"
      description:
        name: path_provider
        sha256: "50c5dd5b6e1aaf6fb3a78b33f6aa3afca52bf903a8a5298f53101fdaee55bbcd"
@@@ -806,6 -806,6 +860,14 @@@
        url: "https://pub.dev"
      source: hosted
      version: "2.3.0"
++  pdf:
++    dependency: "direct main"
++    description:
++      name: pdf
++      sha256: "28eacad99bffcce2e05bba24e50153890ad0255294f4dd78a17075a2ba5c8416"
++      url: "https://pub.dev"
++    source: hosted
++    version: "3.11.3"
    permission_handler:
      dependency: "direct main"
      description:
@@@ -902,6 -902,6 +964,14 @@@
        url: "https://pub.dev"
      source: hosted
      version: "6.1.2"
++  qr:
++    dependency: transitive
++    description:
++      name: qr
++      sha256: "5a1d2586170e172b8a8c8470bbbffd5eb0cd38a66c0d77155ea138d3af3a4445"
++      url: "https://pub.dev"
++    source: hosted
++    version: "3.0.2"
    scroll_to_index:
      dependency: transitive
      description:
@@@ -910,6 -910,6 +980,22 @@@
        url: "https://pub.dev"
      source: hosted
      version: "3.0.1"
++  share_plus:
++    dependency: "direct main"
++    description:
++      name: share_plus
++      sha256: b2961506569e28948d75ec346c28775bb111986bb69dc6a20754a457e3d97fa0
++      url: "https://pub.dev"
++    source: hosted
++    version: "11.0.0"
++  share_plus_platform_interface:
++    dependency: transitive
++    description:
++      name: share_plus_platform_interface
++      sha256: "1032d392bc5d2095a77447a805aa3f804d2ae6a4d5eef5e6ebb3bd94c1bc19ef"
++      url: "https://pub.dev"
++    source: hosted
++    version: "6.0.0"
    shared_preferences:
      dependency: transitive
      description:
@@@ -1071,10 -1071,10 +1157,10 @@@
      dependency: transitive
      description:
        name: timezone
--      sha256: ffc9d5f4d1193534ef051f9254063fa53d588609418c84299956c3db9383587d
++      sha256: dd14a3b83cfd7cb19e7888f1cbc20f258b8d71b54c06f79ac585f14093a287d1
        url: "https://pub.dev"
      source: hosted
--    version: "0.10.0"
++    version: "0.10.1"
    typed_data:
      dependency: transitive
      description:
@@@ -1187,6 -1187,6 +1273,14 @@@
        url: "https://pub.dev"
      source: hosted
      version: "1.1.1"
++  win32:
++    dependency: transitive
++    description:
++      name: win32
++      sha256: daf97c9d80197ed7b619040e86c8ab9a9dad285e7671ee7390f9180cc828a51e
++      url: "https://pub.dev"
++    source: hosted
++    version: "5.10.1"
    xdg_directories:
      dependency: transitive
      description:
diff --cc pubspec.yaml
index f88a471,f88a471..974d0ca
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@@ -39,6 -39,6 +39,14 @@@ dependencies
    firebase_messaging: ^15.1.5
    flutter_local_notifications: ^18.0.1
    uuid: ^4.5.1
++  pdf: ^3.11.3
++  path_provider: ^2.1.5
++  flutter_pdfview: ^1.4.0+1
++  share_plus: ^11.0.0
++  datepicker_dropdown:
++    path: lib/app/packages/dropdown_date_picker
++  dropdown_button2: ^2.3.9
++  easy_date_timeline: ^2.0.9
  
  dev_dependencies:
    flutter_lints: ^3.0.0
diff --cc windows/flutter/generated_plugin_registrant.cc
index cd2d1b7,cd2d1b7..cc7624a
--- a/windows/flutter/generated_plugin_registrant.cc
+++ b/windows/flutter/generated_plugin_registrant.cc
@@@ -10,6 -10,6 +10,7 @@@
  #include <file_selector_windows/file_selector_windows.h>
  #include <firebase_core/firebase_core_plugin_c_api.h>
  #include <permission_handler_windows/permission_handler_windows_plugin.h>
++#include <share_plus/share_plus_windows_plugin_c_api.h>
  #include <url_launcher_windows/url_launcher_windows.h>
  
  void RegisterPlugins(flutter::PluginRegistry* registry) {
@@@ -21,6 -21,6 +22,8 @@@
        registry->GetRegistrarForPlugin("FirebaseCorePluginCApi"));
    PermissionHandlerWindowsPluginRegisterWithRegistrar(
        registry->GetRegistrarForPlugin("PermissionHandlerWindowsPlugin"));
++  SharePlusWindowsPluginCApiRegisterWithRegistrar(
++      registry->GetRegistrarForPlugin("SharePlusWindowsPluginCApi"));
    UrlLauncherWindowsRegisterWithRegistrar(
        registry->GetRegistrarForPlugin("UrlLauncherWindows"));
  }
diff --cc windows/flutter/generated_plugins.cmake
index ac25239,ac25239..9a61801
--- a/windows/flutter/generated_plugins.cmake
+++ b/windows/flutter/generated_plugins.cmake
@@@ -7,6 -7,6 +7,7 @@@ list(APPEND FLUTTER_PLUGIN_LIS
    file_selector_windows
    firebase_core
    permission_handler_windows
++  share_plus
    url_launcher_windows
  )
  
